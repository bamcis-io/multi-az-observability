"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Operation = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 * A single operation that is part of a service
 */
class Operation {
    constructor(props) {
        this.canaryMetricDetails = props.canaryMetricDetails;
        this.httpMethods = props.httpMethods;
        this.isCritical = props.isCritical;
        this.operationName = props.operationName;
        this.path = props.path;
        this.serverSideAvailabilityMetricDetails = props.serverSideAvailabilityMetricDetails;
        this.serverSideLatencyMetricDetails = props.serverSideLatencyMetricDetails;
        this.serverSideContributorInsightRuleDetails = props.serverSideContributorInsightRuleDetails;
        this.service = props.service;
        this.canaryTestProps = props.canaryTestProps;
    }
}
exports.Operation = Operation;
_a = JSII_RTTI_SYMBOL_1;
Operation[_a] = { fqn: "multi-az-observability.Operation", version: "0.1.12" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3BlcmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiT3BlcmF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBU0E7O0dBRUc7QUFDSCxNQUFhLFNBQVM7SUF3RGxCLFlBQVksS0FBcUI7UUFFL0IsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQztRQUNyRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUM7UUFDckMsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1FBQ25DLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLG1DQUFtQyxHQUFHLEtBQUssQ0FBQyxtQ0FBbUMsQ0FBQztRQUNyRixJQUFJLENBQUMsOEJBQThCLEdBQUcsS0FBSyxDQUFDLDhCQUE4QixDQUFDO1FBQzNFLElBQUksQ0FBQyx1Q0FBdUMsR0FBRyxLQUFLLENBQUMsdUNBQXVDLENBQUM7UUFDN0YsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDO1FBQzdCLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDLGVBQWUsQ0FBQztJQUMvQyxDQUFDOztBQXBFTCw4QkFxRUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IElDb250cmlidXRvckluc2lnaHRSdWxlRGV0YWlscyB9IGZyb20gXCIuL0lDb250cmlidXRvckluc2lnaHRSdWxlRGV0YWlsc1wiO1xuaW1wb3J0IHsgSVNlcnZpY2UgfSBmcm9tIFwiLi9JU2VydmljZVwiO1xuaW1wb3J0IHsgT3BlcmF0aW9uUHJvcHMgfSBmcm9tIFwiLi9wcm9wcy9PcGVyYXRpb25Qcm9wc1wiO1xuaW1wb3J0IHsgSU9wZXJhdGlvbiB9IGZyb20gXCIuL0lPcGVyYXRpb25cIjtcbmltcG9ydCB7IElPcGVyYXRpb25NZXRyaWNEZXRhaWxzIH0gZnJvbSBcIi4vSU9wZXJhdGlvbk1ldHJpY0RldGFpbHNcIjtcbmltcG9ydCB7IElDYW5hcnlNZXRyaWNzIH0gZnJvbSBcIi4vSUNhbmFyeU1ldHJpY3NcIjtcbmltcG9ydCB7IEFkZENhbmFyeVRlc3RQcm9wcyB9IGZyb20gXCIuLi9jYW5hcmllcy9wcm9wcy9BZGRDYW5hcnlUZXN0UHJvcHNcIjtcblxuLyoqXG4gKiBBIHNpbmdsZSBvcGVyYXRpb24gdGhhdCBpcyBwYXJ0IG9mIGEgc2VydmljZVxuICovXG5leHBvcnQgY2xhc3MgT3BlcmF0aW9uIGltcGxlbWVudHMgSU9wZXJhdGlvblxue1xuICAgIC8qKlxuICAgICAqIFRoZSBzZXJ2aWNlIHRoZSBvcGVyYXRpb24gaXMgYXNzb2NpYXRlZCB3aXRoXG4gICAgICovXG4gICAgcmVhZG9ubHkgc2VydmljZTogSVNlcnZpY2U7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgb3BlcmF0aW9uXG4gICAgICovXG4gICAgcmVhZG9ubHkgb3BlcmF0aW9uTmFtZTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogIFRoZSBIVFRQIHBhdGggZm9yIHRoZSBvcGVyYXRpb24gZm9yIGNhbmFyaWVzXG4gICAgICogIHRvIHJ1biBhZ2FpbnN0LCBzb21ldGhpbmcgbGlrZSBcIi9wcm9kdWN0cy9saXN0XCJcbiAgICAgKi9cbiAgICByZWFkb25seSBwYXRoOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2VydmVyIHNpZGUgYXZhaWxhYmlsaXR5IG1ldHJpYyBkZXRhaWxzXG4gICAgICovXG4gICAgcmVhZG9ubHkgc2VydmVyU2lkZUF2YWlsYWJpbGl0eU1ldHJpY0RldGFpbHM6IElPcGVyYXRpb25NZXRyaWNEZXRhaWxzO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNlcnZlciBzaWRlIGxhdGVuY3kgbWV0cmljIGRldGFpbHNcbiAgICAgKi9cbiAgICByZWFkb25seSBzZXJ2ZXJTaWRlTGF0ZW5jeU1ldHJpY0RldGFpbHM6IElPcGVyYXRpb25NZXRyaWNEZXRhaWxzO1xuXG4gICAgLyoqXG4gICAgICogT3B0aW9uYWwgbWV0cmljIGRldGFpbHMgaWYgdGhlIHNlcnZpY2UgaGFzIGEgY2FuYXJ5XG4gICAgICovXG4gICAgcmVhZG9ubHkgY2FuYXJ5TWV0cmljRGV0YWlscz86IElDYW5hcnlNZXRyaWNzO1xuXG4gICAgLyoqXG4gICAgKiBUaGUgc2VydmVyIHNpZGUgZGV0YWlscyBmb3IgY29udHJpYnV0b3IgaW5zaWdodHMgcnVsZXNcbiAgICAqL1xuICAgIHJlYWRvbmx5IHNlcnZlclNpZGVDb250cmlidXRvckluc2lnaHRSdWxlRGV0YWlscz86IElDb250cmlidXRvckluc2lnaHRSdWxlRGV0YWlscztcblxuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyB0aGlzIGlzIGEgY3JpdGljYWwgb3BlcmF0aW9uIGZvciB0aGUgc2VydmljZVxuICAgICAqIGFuZCB3aWxsIGJlIGluY2x1ZGVkIGluIHNlcnZpY2UgbGV2ZWwgbWV0cmljcyBhbmQgXG4gICAgICogZGFzaGJvYXJkc1xuICAgICAqL1xuICAgIHJlYWRvbmx5IGlzQ3JpdGljYWw6IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiBUaGUgaHR0cCBtZXRob2RzIHN1cHBvcnRlZCBieSB0aGUgb3BlcmF0aW9uXG4gICAgICovXG4gICAgcmVhZG9ubHkgaHR0cE1ldGhvZHM6IHN0cmluZ1tdO1xuXG4gICAgLyoqXG4gICAgICogSWYgdGhleSBoYXZlIGJlZW4gYWRkZWQsIHRoZSBwcm9wZXJ0aWVzIGZvclxuICAgICAqIGNyZWF0aW5nIG5ldyBjYW5hcnkgdGVzdHMgb24gdGhpcyBvcGVyYXRpb25cbiAgICAgKi9cbiAgICByZWFkb25seSBjYW5hcnlUZXN0UHJvcHM/OiBBZGRDYW5hcnlUZXN0UHJvcHM7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogT3BlcmF0aW9uUHJvcHMpXG4gICAge1xuICAgICAgdGhpcy5jYW5hcnlNZXRyaWNEZXRhaWxzID0gcHJvcHMuY2FuYXJ5TWV0cmljRGV0YWlscztcbiAgICAgIHRoaXMuaHR0cE1ldGhvZHMgPSBwcm9wcy5odHRwTWV0aG9kcztcbiAgICAgIHRoaXMuaXNDcml0aWNhbCA9IHByb3BzLmlzQ3JpdGljYWw7XG4gICAgICB0aGlzLm9wZXJhdGlvbk5hbWUgPSBwcm9wcy5vcGVyYXRpb25OYW1lO1xuICAgICAgdGhpcy5wYXRoID0gcHJvcHMucGF0aDtcbiAgICAgIHRoaXMuc2VydmVyU2lkZUF2YWlsYWJpbGl0eU1ldHJpY0RldGFpbHMgPSBwcm9wcy5zZXJ2ZXJTaWRlQXZhaWxhYmlsaXR5TWV0cmljRGV0YWlscztcbiAgICAgIHRoaXMuc2VydmVyU2lkZUxhdGVuY3lNZXRyaWNEZXRhaWxzID0gcHJvcHMuc2VydmVyU2lkZUxhdGVuY3lNZXRyaWNEZXRhaWxzO1xuICAgICAgdGhpcy5zZXJ2ZXJTaWRlQ29udHJpYnV0b3JJbnNpZ2h0UnVsZURldGFpbHMgPSBwcm9wcy5zZXJ2ZXJTaWRlQ29udHJpYnV0b3JJbnNpZ2h0UnVsZURldGFpbHM7XG4gICAgICB0aGlzLnNlcnZpY2UgPSBwcm9wcy5zZXJ2aWNlO1xuICAgICAgdGhpcy5jYW5hcnlUZXN0UHJvcHMgPSBwcm9wcy5jYW5hcnlUZXN0UHJvcHM7XG4gICAgfVxufSJdfQ==